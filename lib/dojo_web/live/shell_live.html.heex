<div class="relative max-h-screen overflow-hidden bg-black">
  <!-- Canvas background -->
  <canvas phx-update="ignore" id="canvas" class="fixed w-full h-full bg-inherit"></canvas>
  <canvas
    :if={@outershell && @outershell.resp}
    phx-update="ignore"
    id="outercanvas"
    class={[
      "fixed z-10 w-full h-full bg-transparent",
      !@outershell && "pointer-events-none"
    ]}
  >
  </canvas>
  <!-- Left Coder pane container -->
  <div class="relative left-0 z-20 w-1/3 min-w-min h-screen p-4 overflow-y-scroll shadow-lg scrollbar-hide pointer-events-none">
    <!-- Function Marks -->
    <div class="flex justify-start space-x-0.5 py-1">
      <div class="fixed flex pointer-events-auto">
        <!-- Example bookmarks -->
        <div
          class="px-3 py-1 font-mono text-xs transition duration-200 rounded rounded-t-lg cursor-pointer focus:outline-none outline outline-1 outline-gray-500 text-brand hover:bg-yellow-300"
          phx-click="seeTurtle"
        >
          ~
        </div>
        <div
          :for={%{"value" => value} <- @myfunctions}
          class="px-3 py-1 font-mono text-xs transition duration-200 rounded rounded-t-lg cursor-pointer focus:outline-none outline outline-1 outline-gray-500 text-brand hover:bg-yellow-300"
          phx-click="seeTurtle"
          phx-value-function={value}
        >
          <%= value %>
        </div>
      </div>
    </div>
    <!-- Editor -->
    <div phx-update="ignore" id="runenv" class="my-12 cursor-text pointer-events-auto">
      <div class="relative z-10">
        <.slider slider_value="50" />
      </div>
      <textarea id="your-buffer" phx-hook="Shell"></textarea>
    </div>
    <!-- Code Output -->
    <div
      phx-update="ignore"
      id="output"
      class="fixed bottom-0 overflow-y-auto font-mono border-none text-brand left-2"
    >
    </div>
  </div>
</div>
<!-- Right Editor -->
<div id="rightpane"  class="fixed top-0 right-0 z-20 flex flex-col w-1/3 h-screen p-4 pointer-events-none">
  <!-- Session -->

  <div id="sessionbox" class={["absolute top-4 right-4 z-20
            w-64 max-w-[calc(100vw-2rem)]
            bg-transparent backdrop-blur-sm
            rounded-lg border-none
            p-3 font-mono text-xs text-brand
            shadow-lg", @session.name && "outline outline-2 p-2"]} >

  <div :if={!@session.name} class="group relative ">
    <!-- Login Link Button -->
    <.link
      navigate={~p"/welcome"}
      class="relative ml-10 px-4 py-2 font-mono text-sm text-amber-400/80 hover:text-amber-300 transition-colors duration-300 pointer-events-auto"
    >
      <span class="relative z-10 text-end">Enter the Shell</span>
      <!-- Animated underscore cursor -->
      <span class="inline-block w-2 h-0.5 ml-1 bg-amber-400 animate-flicker">_</span>

      <!-- Decorative corners (smaller size for subtlety) -->
      <div class="absolute -top-0.5 -left-0.5 w-2 h-2 border-t border-l border-amber-500"></div>
      <div class="absolute -top-0.5 -right-0.5 w-2 h-2 border-t border-r border-amber-500"></div>
      <div class="absolute -bottom-0.5 -left-0.5 w-2 h-2 border-b border-l border-amber-500"></div>
      <div class="absolute -bottom-0.5 -right-0.5 w-2 h-2 border-b border-r border-amber-500"></div>
    </.link>
</div>

    <span :if={@session.name} class="block">
      &gt; welcome to the shell, <%= @session.name %>
      <span class="relative flex items-center space-x-2"></span>
    </span>
    <span :if={@outershell && @outershell.resp} class="block">
      &gt; summoning @<%= @outershell.resp %>'s code â˜„
    </span>
  </div>
  <span
    :if={@outershell && @outershell.resp}
    class="absolute text-lg font-bold right-8 md:right-10 lg:right-12 text-amber-600 top-36"
  >
    @<%= @outershell.resp %>'s code
  </span>
  <div
    :if={@outershell}
    id="outerenv"
    phx-update="ignore"
    class="absolute w-2/3 overflow-y-scroll border rounded-lg h-1/2 top-32 right-4 bottom-4 bg-amber-300/10 border-amber-600/20 dark-scrollbar pointer-events-auto"
  >
    <button
      phx-click="seeTurtle"
      class="absolute z-10 flex items-center justify-center w-8 h-8 transition-all duration-300 transform border-2 rounded-full shadow-xl opacity-50 backdrop-blur-sm hover:scale-110 hover:bg-red-900/90 group hover:opacity-100 top-4 left-4 bg-amber-900/90 border-amber-600 pointer-events-auto"
    >
      <!-- Base Crosshair -->
      <div class="absolute inset-0 flex items-center justify-center">
        <svg
          class="w-5 h-5 transition-colors text-amber-300 group-hover:text-red-300"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </div>
      <!-- Mechanical Cross Overlay -->
      <svg
        class="absolute inset-0 w-full h-full transition-opacity text-amber-600 opacity-30 group-hover:opacity-50"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="1"
      >
        <path d="M12 2v20M2 12h20" />
        <circle cx="12" cy="12" r="10" />
        <path d="M12 7v10M7 12h10" stroke-dasharray="2 2" />
      </svg>
    </button>
    <div class="p-4 mt-12 mb-8 overflow-auto backdrop-blur-sm font-mono text-xs text-white bg-transparent resize-none h-11/12 focus:outline-none">
      <textarea phx-update="ignore" id="outershell" phx-hook="OuterShell"></textarea>
    </div>
  </div>
  <.command_deck visible={@deck} />
</div>

<%!-- Turtle viewing pane --%>
<div class="fixed bottom-0 z-40 flex w-2/3 p-4 m-4 overflow-x-scroll transform -translate-x-1/2 border border-gray-900 rounded-md pointer-events-none left-1/2 dark-scrollbar">
  <!-- Other people's turtles -->
  <div
    :for={{name, dis} <- @disciples |> Enum.sort_by(&elem(&1, 1).online_at, :desc)}
    :if={Map.has_key?(dis, :meta) && @pane}
    class={"rounded-lg transition mx-8 pb-4 pt-2 gap-2 duration-200 ease-in-out flex-shrink-0 w-1/6" <> is_main_focus(dis.phx_ref, @focused_phx_ref)}
  >
    <.icon
      :if={@sensei}
      name="hero-cursor-arrow-ripple"
      phx-click="toggle-focus"
      phx-value-disciple-phx_ref={dis.phx_ref}
      class="cursor-pointer pointer-events-auto text-brand"
    />
    <div phx-click="seeTurtle" phx-value-addr={name} class={[
      "relative flex justify-center h-32 lg:w-48 w-32 border pointer-events-auto rounded-md cursor-alias hover:scale-120 hover:border-2",
      @outershell && @outershell.addr == name && "border-orange-500"
    ]}>
  <div class="absolute top-2 right-2 font-mono text-amber-500/50 text-sm tracking-wider rotate-0 select-none">
    <%= name %>
  </div>

      <img
        src={dis.meta.path}
        class="object-scale-down max-h-full m-auto"
      />
    </div>
  </div>
  <div id="paneflip" class="fixed bottom-0 z-50 w-2/3 left-1/2 -translate-x-1/2 m-2 pointer-events-auto" phx-hook="Sensei">
        <svg
        class={"z-[60] w-6 h-6 text-amber-400 items-center flex  m-auto  rounded-lg shadow-xl backdrop-blur-sm transform transition-transform duration-300" <> if(@pane, do: " rotate-180", else: "")}
        phx-click="flipPane"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
      >
        <path d="M18 15l-6-6-6 6"/>
      </svg>
    </div>
  <div :if={@sensei} class="z-50 flex mb-2 pointer-events-auto">
    <.export />
  </div>
</div>

<style>
  /* Custom styles for editor width */
  #editor {
  width: 80ch; /* 80 characters width */
  }
</style>
